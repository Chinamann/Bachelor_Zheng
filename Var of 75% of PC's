import numpy as np
import matplotlib.pyplot as plt
from sklearn.decomposition import PCA
from sklearn.impute import SimpleImputer

# Load pre and post datasets
pre = np.load("C:/Users/zheng/OneDrive/Desktop/Bachelor/F0254/events_pre.npy")
post = np.load("C:/Users/zheng/OneDrive/Desktop/Bachelor/F0254/events_post.npy")

# Ensure both arrays have the same shape for PCA (trim to the smallest shape)
min_shape = min(pre.shape[1:], post.shape[1:])  # Find smallest shape
pre_trimmed = pre[:, :min_shape[0], :min_shape[1]]
post_trimmed = post[:, :min_shape[0], :min_shape[1]]

# Flatten the arrays (samples Ã— features)
pre_flattened = pre_trimmed.reshape(pre_trimmed.shape[0], -1)  # (samples, features)
post_flattened = post_trimmed.reshape(post_trimmed.shape[0], -1)

# Combine pre and post data
combined_data = np.vstack([pre_flattened, post_flattened])

# Impute missing values (replace NaNs)
imputer = SimpleImputer(strategy='mean')
combined_data_imputed = imputer.fit_transform(combined_data)

# Apply PCA and limit to 20 principal components
pca = PCA(n_components=20)
pca.fit(combined_data_imputed)

# Explained variance ratio
explained_variance = pca.explained_variance_ratio_

# Create a separate figure for the bar plot with percentages
plt.figure(figsize=(14, 8))

# Enlarge the bars for clearer visualization
bars = plt.bar(range(1, 21), explained_variance, alpha=0.8, color='green', width=0.7)

# Annotate each bar with the percentage explained
for i, bar in enumerate(bars):
    yval = bar.get_height()
    plt.text(bar.get_x() + bar.get_width() / 2, yval + 0.01, f'{yval*100:.2f}%', ha='center', va='bottom')

plt.title("Variance Explained by First 20 Principal Components")
plt.xlabel("Principal Component")
plt.ylabel("Variance Explained")
plt.grid(True)
plt.xticks(range(1, 21))  # Only show 20 components on the x-axis
plt.tight_layout()  # Adjust layout for better spacing
plt.show()

# Cumulative explained variance plot (on a separate figure)
plt.figure(figsize=(12, 6))
plt.plot(np.cumsum(explained_variance), marker='o', linestyle='--', color='b')
plt.title("Cumulative Explained Variance by First 20 Principal Components")
plt.xlabel("Number of Principal Components")
plt.ylabel("Cumulative Explained Variance")
plt.grid(True)
plt.xticks(range(1, 21))  # Limit to the first 20 components
plt.tight_layout()
plt.show()

# Print the explained variance ratios for the first 20 principal components
print("Explained variance by the first 20 principal components:", explained_variance)

#plot it again with one figure pre and one figure post
