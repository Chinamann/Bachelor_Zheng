import numpy as np
from sklearn.decomposition import PCA

# ---------------------------
# Load data
# ---------------------------
pre = np.load("C:/Users/zheng/OneDrive/Desktop/Bachelor/F0254/events_pre.npy")
post = np.load("C:/Users/zheng/OneDrive/Desktop/Bachelor/F0254/events_post.npy")

# Match number of slices (optional: keep same length for comparison)
post = post[:pre.shape[0]]

# ---------------------------
# Flatten each slice for PCA
# ---------------------------
pre_flat = np.nan_to_num(pre).reshape(pre.shape[0], -1)   # (n_slices, n_pixels)
post_flat = np.nan_to_num(post).reshape(post.shape[0], -1)

# ---------------------------
# PCA transformation
# ---------------------------
n_components = 5
pca_pre = PCA(n_components=n_components)
pre_pca_result = pca_pre.fit_transform(pre_flat)

pca_post = PCA(n_components=n_components)
post_pca_result = pca_post.fit_transform(post_flat)

# ---------------------------
# Print PCA results (abbreviated)
# ---------------------------
print("Pre data PCA result (first 13 components):")
print(pre_pca_result)

print("\nPost data PCA result (first 13 components):")
print(post_pca_result)
